services:
  go-admin:
    container_name: go-admin
    image: bignya/go-admin:v0.0.3
    restart: always
    environment:
      DB_HOST: "${DB_HOST}"
      DB_PORT: "${DB_PORT}"
      DB_USER: "${DB_USER}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_NAME: "${DB_NAME}"
      ENVIRONMENT: "dev"
      REDIS_ADDR: "${REDIS_ADDR}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      REDIS_DB: "${REDIS_DB}"
      PUBSUB_ENABLED: "${PUBSUB_ENABLED}"
      PUBSUB_TYPE: "${PUBSUB_TYPE}"
      PUBSUB_NAMESPACE: "${PUBSUB_NAMESPACE}"
      SERVER_TYPE: "${SERVER_TYPE}"
    ports:
      - "8081:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/ || exit 1"]
      interval: 19s
      timeout: 5s
      retries: 10
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      # gatari-db-init:
      #   condition: service_completed_successfully

  gate-keeper:
    container_name: gate-keeper
    image: bignya/gate-keeper:v0.0.3
    restart: always
    environment:
      DB_HOST: "${DB_HOST}"
      DB_PORT: "${DB_PORT}"
      DB_USER: "${DB_USER}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_NAME: "${DB_NAME}"
      REDIS_ADDR: "${REDIS_ADDR}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      REDIS_DB: "${REDIS_DB}"
      ENVIRONMENT: "dev"
      PUBSUB_ENABLED: "${PUBSUB_ENABLED}"
      PUBSUB_TYPE: "${PUBSUB_TYPE}"
      PUBSUB_NAMESPACE: "${PUBSUB_NAMESPACE}"
      GATEKEEPER_MODE: "${GATEKEEPER_MODE}"
      PROXY_TARGET: "${PROXY_TARGET}"
      SERVER_TYPE: "${SERVER_TYPE}"
    ports:
      - "8082:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/ || exit 1"]
      interval: 19s
      timeout: 5s
      retries: 10
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      # gatari-db-init:
      #   condition: service_completed_successfully

  gatari-db-init:
    container_name: gatari-db-init
    image: bignya/gatari-db-init:v0.0.3
    environment:
      DB_DSN: "postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=disable"
      DB_SCHEMA_DIR: "${DB_SCHEMA_DIR}"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: "no"

  gatari-fe:
    container_name: gatari-fe
    image: bignya/gatari-fe:latest
    restart: always
    ports:
      - "3000:80"
    # depends_on:
    #   go-admin:
    #     condition: service_healthy

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: "${DB_NAME}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
    ports:
      - "5432:5432"
    volumes:
      - go-admin-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis
    restart: always
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    environment:
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
    ports:
      - "6379:6379"
    volumes:
      - go-admin-redis-data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a ${REDIS_PASSWORD} ping | grep PONG"]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  go-admin-postgres-data:
    driver: local
  go-admin-redis-data:
    driver: local