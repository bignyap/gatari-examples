services:
  go-admin:
    container_name: go-admin
    image: bignya/go-admin:v0.0.3
    restart: always
    environment:
      DB_HOST: "postgres"
      DB_PORT: "5432"
      DB_USER: "go-admin"
      DB_PASSWORD: "go-admin"
      DB_NAME: "go-admin"
      ENVIRONMENT: "dev"
      REDIS_ADDR: "redis:6379"
      REDIS_PASSWORD: "redis"
      REDIS_DB: "0"
      PUBSUB_ENABLED: "true"
      PUBSUB_TYPE: "redis"
      PUBSUB_NAMESPACE: "gatari-gatekeeping"
      SERVER_TYPE: "http"
    ports:
      - "8081:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/ || exit 1"]
      interval: 19s
      timeout: 5s
      retries: 10
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  gate-keeper:
    container_name: gate-keeper
    image: bignya/gate-keeper:v0.0.3
    restart: always
    environment:
      DB_HOST: "postgres"
      DB_PORT: "5432"
      DB_USER: "go-admin"
      DB_PASSWORD: "go-admin"
      DB_NAME: "go-admin"
      REDIS_ADDR: "redis:6379"
      REDIS_PASSWORD: "redis"
      REDIS_DB: "0"
      ENVIRONMENT: "dev"
      PUBSUB_ENABLED: "true"
      PUBSUB_TYPE: "redis"
      PUBSUB_NAMESPACE: "gatari-gatekeeping"
      GATEKEEPER_MODE: "auth-middleware"
      PROXY_TARGET: ""
      SERVER_TYPE: "http"
    ports:
      - "8082:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/ || exit 1"]
      interval: 19s
      timeout: 5s
      retries: 10
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  gatari-db-init:
    container_name: gatari-db-init
    image: bignya/gatari-db-init:v0.0.3
    environment:
      DB_DSN: "postgres://go-admin:go-admin@postgres:5432/go-admin?sslmode=disable"
      DB_SCHEMA_DIR: "/gatari/schema"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: "no"

  gatari-fe:
    container_name: gatari-fe
    image: bignya/gatari-fe:latest
    restart: always
    ports:
      - "3000:80"

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: "go-admin"
      POSTGRES_USER: "go-admin"
      POSTGRES_PASSWORD: "go-admin"
    ports:
      - "5432:5432"
    volumes:
      - go-admin-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U go-admin"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis
    restart: always
    command: ["redis-server", "--requirepass", "redis"]
    environment:
      REDIS_PASSWORD: "redis"
    ports:
      - "6379:6379"
    volumes:
      - go-admin-redis-data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a redis ping | grep PONG"]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  go-admin-postgres-data:
    driver: local
  go-admin-redis-data:
    driver: local